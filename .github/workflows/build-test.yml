name: "KinKal"

on: [push, pull_request]
defaults:
  run:
    shell: bash -l {0}
env:
  CLICOLOR_FORCE: 1

jobs:
  build-test-kinkal:
    name: Tests (${{ matrix.build-type }}, ${{ matrix.os }}, root ${{ matrix.root-version }}, py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["macos-latest,ubuntu-latest"]
        python-version: ["3.9"]
        root-version: ["6.26.10"]
        build-type: ["Debug", "Release"]

    steps:
      - name: Cache conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          # This will be necessary to update e.g. the version of cmake, cxx-compiler, or clang-tools that is used
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ matrix.root-version }}-${{ matrix.python-version }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: strict
          use-only-tar-bz2: true
      - name: Conda info
        run: conda info

      - name: Conda/Mamba Install
        run: mamba install -c conda-forge cxx-compiler root=${{ matrix.root-version }} cmake # clang-tools

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: CMake (${{ matrix.build-type }})
        run: |
          cd ..
          ENABLE_COVERAGE=""

          if [ "${{ matrix.build-type }}" = "Debug" ]; then
            if [ "${{ matrix.os }}" = "macos-10.15" ]; then
              ENABLE_COVERAGE="-DCOVERAGE=ON"
            fi
          fi

          cmake -S KinKal -B KinKal_${{ matrix.build-type }} \
                -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
                -DCMAKE_COLOR_MAKEFILE=ON ${ENABLE_COVERAGE}

      - name: Build (${{ matrix.build-type }})
        run: |
          cd ../KinKal_${{ matrix.build-type }}
          make -j8

      - name: Run tests
        run: |
          cd ../KinKal_${{ matrix.build-type }}
          env CTEST_OUTPUT_ON_FAILURE=1 make test

      - name: Create coverage report
        run: |
          cd ../KinKal_${{ matrix.build-type }}
          mamba install -c conda-forge -y gcovr

          make coverage
          gcovr -r ../KinKal . --xml -o coverage.xml --gcov-executable "llvm-cov gcov"  --exclude-directories Tests

        if: ${{ matrix.build-type == 'Debug' && matrix.os == 'macos-10.15' }}

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          files: ../KinKal_${{ matrix.build-type }}/coverage.xml
          flags: unittests
          name: codecov-umbrella
        if: ${{ matrix.build-type == 'Debug' && matrix.os == 'macos-10.15' }}

#       - name: Run clang-tidy
#         if: ${{ matrix.build-type == 'Release' && matrix.os == 'ubuntu-latest' }}
#         run: |
#           cd ..
#           cmake -S KinKal -B KinKal_${{ matrix.build-type }}_ClangTidy \
#                 -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
#                 -DCMAKE_COLOR_MAKEFILE=ON \
#                 -DENABLE_CLANG_TIDY_WITH_FIXES=ON
#           cd KinKal_${{ matrix.build-type }}_ClangTidy
#           make -j8

#       - name: suggester / clang-tidy
#         if: ${{ matrix.build-type == 'Release' && matrix.os == 'ubuntu-latest' && github.event_name == 'pull_request' }}
#         uses: reviewdog/action-suggester@v1
#         with:
#           tool_name: clang-tidy
